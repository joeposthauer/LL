{"ast":null,"code":"import _slicedToArray from \"/Users/joeposthauer/Desktop/Udemy- Webdev/React/es6-spread-operator-practice/using-pre-built-react-components-completed/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/joeposthauer/Desktop/Udemy- Webdev/React/es6-spread-operator-practice/using-pre-built-react-components-completed/src/components/App.jsx\";\nimport React, { useState } from \"react\";\nimport Submit from \"./Submit.jsx\";\nimport CytoNode from \"./CytoNode.jsx\";\nimport Header from \"./Header.jsx\";\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      nodes = _useState2[0],\n      setNodes = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      edges = _useState4[0],\n      setEdges = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      cyto = _useState6[0],\n      setCyto = _useState6[1];\n\n  function addCyto(newCyto) {\n    setCyto(function (prevCyto) {\n      return [newCyto];\n    });\n  } //function receives nodes+edges from Submit.jsx\n\n\n  function createNodes(nodes, edges) {\n    var allNodes = [];\n    var allEdges = [];\n    var nodeData = nodes;\n    var edgeData = edges;\n    console.log(nodeData);\n    console.log(edgeData);\n    nodeData.forEach(function (n) {\n      allNodes.push({\n        \"name\": n[0],\n        \"xpos\": n[1].layout.pos[0],\n        \"ypos\": n[1].layout.pos[0],\n        \"text\": n[1].layout.text\n      });\n    });\n    return allNodes;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Submit, {\n    onSubm: createNodes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CytoNode, {\n    nodes: nodes //edges={allEdges}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"names":["React","useState","Submit","CytoNode","Header","App","nodes","setNodes","edges","setEdges","cyto","setCyto","addCyto","newCyto","prevCyto","createNodes","allNodes","allEdges","nodeData","edgeData","console","log","forEach","n","push","layout","pos","text"],"sources":["/Users/joeposthauer/Desktop/Udemy- Webdev/React/es6-spread-operator-practice/using-pre-built-react-components-completed/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Submit from \"./Submit.jsx\";\nimport CytoNode from \"./CytoNode.jsx\";\nimport Header from \"./Header.jsx\";\n\nfunction App() {\n\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const [cyto, setCyto] = useState([]);\n\n  function addCyto(newCyto) {\n    setCyto(prevCyto => {\n      return [newCyto];\n    });\n  }\n\n\n  //function receives nodes+edges from Submit.jsx\n  function createNodes(nodes, edges) {\n    const allNodes = [];\n    const allEdges = [];\n\n    const nodeData = nodes;\n    const edgeData = edges;\n\n    console.log(nodeData);\n    console.log(edgeData);\n\n    nodeData.forEach(function (n) {\n      allNodes.push({\n        \"name\": n[0],\n        \"xpos\": n[1].layout.pos[0],\n        \"ypos\": n[1].layout.pos[0],\n        \"text\": n[1].layout.text\n      })\n    })\n\n    return allNodes;\n  }\n\n  return (\n    <div>\n      <Header />\n      <Submit\n        onSubm={createNodes}\n      />\n      <CytoNode\n        nodes={nodes}\n        //edges={allEdges}\n      />\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,SAASC,GAAT,GAAe;EAEb,gBAA0BJ,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAA0BN,QAAQ,CAAC,EAAD,CAAlC;EAAA;EAAA,IAAOO,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAwBR,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOS,IAAP;EAAA,IAAaC,OAAb;;EAEA,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;IACxBF,OAAO,CAAC,UAAAG,QAAQ,EAAI;MAClB,OAAO,CAACD,OAAD,CAAP;IACD,CAFM,CAAP;EAGD,CAVY,CAab;;;EACA,SAASE,WAAT,CAAqBT,KAArB,EAA4BE,KAA5B,EAAmC;IACjC,IAAMQ,QAAQ,GAAG,EAAjB;IACA,IAAMC,QAAQ,GAAG,EAAjB;IAEA,IAAMC,QAAQ,GAAGZ,KAAjB;IACA,IAAMa,QAAQ,GAAGX,KAAjB;IAEAY,OAAO,CAACC,GAAR,CAAYH,QAAZ;IACAE,OAAO,CAACC,GAAR,CAAYF,QAAZ;IAEAD,QAAQ,CAACI,OAAT,CAAiB,UAAUC,CAAV,EAAa;MAC5BP,QAAQ,CAACQ,IAAT,CAAc;QACZ,QAAQD,CAAC,CAAC,CAAD,CADG;QAEZ,QAAQA,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYC,GAAZ,CAAgB,CAAhB,CAFI;QAGZ,QAAQH,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYC,GAAZ,CAAgB,CAAhB,CAHI;QAIZ,QAAQH,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYE;MAJR,CAAd;IAMD,CAPD;IASA,OAAOX,QAAP;EACD;;EAED,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,MAAD;IACE,MAAM,EAAED,WADV;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAKE,oBAAC,QAAD;IACE,KAAK,EAAET,KADT,CAEE;IAFF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EALF,CADF;AAaD;;AAED,eAAeD,GAAf"},"metadata":{},"sourceType":"module"}