{"ast":null,"code":"var _jsxFileName = \"/Users/joeposthauer/Desktop/Udemy- Webdev/React/es6-spread-operator-practice/using-pre-built-react-components-completed/src/components/CytoNode.jsx\";\nimport React from \"react\";\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Cytoscape from 'react-cytoscapejs';\nimport edgehandles from \"cytoscape-edgehandles\";\n\nfunction CytoNode(props) {\n  //declare cytoscape, start empty, add nodes once data is received\n  var cy = new Cytoscape({\n    container: document.getElementById('cy'),\n    elements: [],\n    style: [{\n      selector: 'node',\n      style: {\n        'background-color': '#69e',\n        'label': 'data(id)'\n      }\n    }, {\n      selector: 'edge',\n      style: {\n        'width': 1,\n        'line-color': '#369',\n        'target-arrow-color': '#369',\n        'target-arrow-shape': 'triangle',\n        'label': 'data(label)',\n        'font-size': '14px',\n        'color': '#777'\n      }\n    }]\n  }); //assembling arrays of nodes/edges from json file\n  //to be properly added to cyto graph\n\n  var nodeData = [];\n  var edgeData = [];\n  props.nodes.forEach(function (n) {\n    nodeData.push({\n      \"name\": n[0],\n      \"xpos\": n[1].layout.pos[0],\n      \"ypos\": n[1].layout.pos[0],\n      \"text\": n[1].layout.text\n    });\n  });\n  props.edges.forEach(function (source) {\n    source[1].forEach(function (dest) {\n      edgeData.push({\n        \"source\": source[0],\n        \"destination\": dest\n      });\n    });\n  }); //add components to graph\n\n  nodeData.forEach(function (node) {\n    console.log(node);\n    cy.add({\n      group: 'nodes',\n      data: {\n        id: node.name,\n        name: node.text\n      },\n      position: {\n        x: node.xpos,\n        y: node.ypos\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"cy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default CytoNode;","map":{"version":3,"names":["React","CytoscapeComponent","Cytoscape","edgehandles","CytoNode","props","cy","container","document","getElementById","elements","style","selector","nodeData","edgeData","nodes","forEach","n","push","layout","pos","text","edges","source","dest","node","console","log","add","group","data","id","name","position","x","xpos","y","ypos"],"sources":["/Users/joeposthauer/Desktop/Udemy- Webdev/React/es6-spread-operator-practice/using-pre-built-react-components-completed/src/components/CytoNode.jsx"],"sourcesContent":["import React from \"react\";\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport Cytoscape from 'react-cytoscapejs'; \nimport edgehandles from \"cytoscape-edgehandles\";\n\nfunction CytoNode(props) {\n\n    //declare cytoscape, start empty, add nodes once data is received\n    let cy =  new Cytoscape({\n        container: document.getElementById('cy'),\n        elements: [],\n        style: [ \n            {\n              selector: 'node',\n              style: {\n                'background-color': '#69e',\n                'label': 'data(id)',\n              }\n            },\n        \n            {\n              selector: 'edge',\n              style: {\n                'width': 1,\n                'line-color': '#369',\n                'target-arrow-color': '#369',\n                'target-arrow-shape': 'triangle',\n                'label': 'data(label)',\n                'font-size': '14px',\n                'color': '#777'\n              }\n            }\n          ],\n    });\n\n    //assembling arrays of nodes/edges from json file\n    //to be properly added to cyto graph\n\n    const nodeData = [];\n    const edgeData = [];\n    props.nodes.forEach(function (n) {\n        nodeData.push({\n          \"name\": n[0],\n          \"xpos\": n[1].layout.pos[0],\n          \"ypos\": n[1].layout.pos[0],\n          \"text\": n[1].layout.text\n        })\n    })\n    props.edges.forEach(function(source) {\n        source[1].forEach(function(dest) {\n            edgeData.push({\n                \"source\": source[0],\n                \"destination\": dest\n            })\n        })\n    })\n\n    //add components to graph\n    nodeData.forEach(function(node) {\n        console.log(node)\n        cy.add({\n            group: 'nodes',\n            data: {\n                id: node.name,\n                name: node.text\n            },\n            position: {\n                x: node.xpos,\n                y: node.ypos\n            }\n        })\n    })\n\n    \n\n\n\n    return(\n        <div id=\"cy\"></div>\n    )\n}\n\nexport default CytoNode;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,mBAA/B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAErB;EACA,IAAIC,EAAE,GAAI,IAAIJ,SAAJ,CAAc;IACpBK,SAAS,EAAEC,QAAQ,CAACC,cAAT,CAAwB,IAAxB,CADS;IAEpBC,QAAQ,EAAE,EAFU;IAGpBC,KAAK,EAAE,CACH;MACEC,QAAQ,EAAE,MADZ;MAEED,KAAK,EAAE;QACL,oBAAoB,MADf;QAEL,SAAS;MAFJ;IAFT,CADG,EASH;MACEC,QAAQ,EAAE,MADZ;MAEED,KAAK,EAAE;QACL,SAAS,CADJ;QAEL,cAAc,MAFT;QAGL,sBAAsB,MAHjB;QAIL,sBAAsB,UAJjB;QAKL,SAAS,aALJ;QAML,aAAa,MANR;QAOL,SAAS;MAPJ;IAFT,CATG;EAHa,CAAd,CAAV,CAHqB,CA8BrB;EACA;;EAEA,IAAME,QAAQ,GAAG,EAAjB;EACA,IAAMC,QAAQ,GAAG,EAAjB;EACAT,KAAK,CAACU,KAAN,CAAYC,OAAZ,CAAoB,UAAUC,CAAV,EAAa;IAC7BJ,QAAQ,CAACK,IAAT,CAAc;MACZ,QAAQD,CAAC,CAAC,CAAD,CADG;MAEZ,QAAQA,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYC,GAAZ,CAAgB,CAAhB,CAFI;MAGZ,QAAQH,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYC,GAAZ,CAAgB,CAAhB,CAHI;MAIZ,QAAQH,CAAC,CAAC,CAAD,CAAD,CAAKE,MAAL,CAAYE;IAJR,CAAd;EAMH,CAPD;EAQAhB,KAAK,CAACiB,KAAN,CAAYN,OAAZ,CAAoB,UAASO,MAAT,EAAiB;IACjCA,MAAM,CAAC,CAAD,CAAN,CAAUP,OAAV,CAAkB,UAASQ,IAAT,EAAe;MAC7BV,QAAQ,CAACI,IAAT,CAAc;QACV,UAAUK,MAAM,CAAC,CAAD,CADN;QAEV,eAAeC;MAFL,CAAd;IAIH,CALD;EAMH,CAPD,EA3CqB,CAoDrB;;EACAX,QAAQ,CAACG,OAAT,CAAiB,UAASS,IAAT,EAAe;IAC5BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACAnB,EAAE,CAACsB,GAAH,CAAO;MACHC,KAAK,EAAE,OADJ;MAEHC,IAAI,EAAE;QACFC,EAAE,EAAEN,IAAI,CAACO,IADP;QAEFA,IAAI,EAAEP,IAAI,CAACJ;MAFT,CAFH;MAMHY,QAAQ,EAAE;QACNC,CAAC,EAAET,IAAI,CAACU,IADF;QAENC,CAAC,EAAEX,IAAI,CAACY;MAFF;IANP,CAAP;EAWH,CAbD;EAmBA,oBACI;IAAK,EAAE,EAAC,IAAR;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ;AAGH;;AAED,eAAejC,QAAf"},"metadata":{},"sourceType":"module"}